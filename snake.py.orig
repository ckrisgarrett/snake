# importing libraries
import pygame
import time
import random

snake_speed = 15

# Window size
window_x = 720
window_y = 480

# defining colors
black = pygame.Color(0, 0, 0)
white = pygame.Color(255, 255, 255)
red = pygame.Color(255, 0, 0)
green = pygame.Color(0, 255, 0)
blue = pygame.Color(0, 0, 255)

game_window = None

# FPS (frames per second) controller
fps = None

# initial score
score = 0


###############################################################################
def main():

	global game_window
	global score

	# Initialising pygame
	pygame.init()
	
	# Initialise game window
	pygame.display.set_caption('GeeksforGeeks Snakes')
	game_window = pygame.display.set_mode((window_x, window_y))
	
	# FPS (frames per second) controller
	fps = pygame.time.Clock()
	
	direction = 'RIGHT'
	
	# defining first 4 blocks of snake body
	snake_body = [[100, 50],
			[90, 50],
			[80, 50],
			[70, 50]
			]
	
	# fruit position
	fruit_position = [random.randrange(1, (window_x//10)) * 10, 
				random.randrange(1, (window_y//10)) * 10]

	while True:

		direction = handle_key_press(direction)
		snake_body = grow_snake(snake_body, direction)
		
		if snake_ate_fruit(snake_body, fruit_position):
			score += 10
			fruit_position = [random.randrange(1, (window_x//10)) * 10, 
							random.randrange(1, (window_y//10)) * 10]
		else:
			snake_body.pop()
		
		game_window.fill(black)
		
		draw_snake(snake_body)
		draw_fruit(fruit_position)

		check_game_over(snake_body)

		show_score()

		pygame.display.update()
		fps.tick(snake_speed)


###############################################################################
def show_score():

	# creating font object score_font
	score_font = pygame.font.SysFont("times new roman", 20)
	
	# create the display surface object 
	# score_surface
	score_surface = score_font.render('Score : ' + str(score), True, white)
	
	# create a rectangular object for the text
	# surface object
	score_rect = score_surface.get_rect()
	
	# displaying text
	game_window.blit(score_surface, score_rect)


###############################################################################
def game_over():

	# creating font object my_font
	my_font = pygame.font.SysFont('times new roman', 50)
	
	# creating a text surface on which text 
	# will be drawn
	game_over_surface = my_font.render(
		'Your Score is : ' + str(score), True, red)
	
	# create a rectangular object for the text 
	# surface object
	game_over_rect = game_over_surface.get_rect()
	
	# setting position of the text
	game_over_rect.midtop = (window_x/2, window_y/4)
	
	# blit will draw the text on screen
	game_window.blit(game_over_surface, game_over_rect)
	pygame.display.flip()
	
	# after 2 seconds we will quit the program
	time.sleep(2)
	
	# deactivating pygame library
	pygame.quit()
	
	# quit the program
	quit()


###############################################################################
def handle_key_press(direction):

	# handling key events
	for event in pygame.event.get():
		if event.type == pygame.KEYDOWN:
			if event.key == pygame.K_UP and direction != 'DOWN':
				direction = 'UP'
			if event.key == pygame.K_DOWN and direction != 'UP':
				direction = 'DOWN'
			if event.key == pygame.K_LEFT and direction != 'RIGHT':
				direction = 'LEFT'
			if event.key == pygame.K_RIGHT and direction != 'LEFT':
				direction = 'RIGHT'

	return direction


###############################################################################
def draw_snake(snake_body):
	for pos in snake_body:
		pygame.draw.rect(game_window, green, pygame.Rect(pos[0], pos[1], 10, 10))


###############################################################################
def draw_fruit(fruit_position):
	pygame.draw.rect(game_window, white, pygame.Rect(
		fruit_position[0], fruit_position[1], 10, 10))


###############################################################################
def check_game_over(snake_body):

	snake_head = snake_body[0]

	# Edge of screen
	if snake_head[0] < 0 or snake_head[0] > window_x-10:
		game_over()
	if snake_head[1] < 0 or snake_head[1] > window_y-10:
		game_over()

	# Touching the snake body
	for block in snake_body[1:]:
		if snake_head[0] == block[0] and snake_head[1] == block[1]:
			game_over()


###############################################################################
def grow_snake(snake_body, direction):

	snake_head = snake_body[0].copy()

	if direction == 'UP':
		snake_head[1] -= 10
	if direction == 'DOWN':
		snake_head[1] += 10
	if direction == 'LEFT':
		snake_head[0] -= 10
	if direction == 'RIGHT':
		snake_head[0] += 10

	snake_body.insert(0, list(snake_head))
	return snake_body


###############################################################################
def snake_ate_fruit(snake_body, fruit_position):

	snake_head = snake_body[0].copy()
	if snake_head[0] == fruit_position[0] and snake_head[1] == fruit_position[1]:
		return True
	else:
		return False


###############################################################################
if __name__ == "__main__":
	main()


